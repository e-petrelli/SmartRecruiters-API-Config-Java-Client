/*
 * Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartrecruiters.api.config.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartrecruiters.api.config.model.Action;
import com.smartrecruiters.api.config.model.CandidatePropertyAvailability;
import com.smartrecruiters.api.config.model.CandidatePropertyType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * CandidatePropertyDefinition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-01T11:44:28.029340+01:00[Europe/Rome]")
public class CandidatePropertyDefinition {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private CandidatePropertyType type;

  public static final String SERIALIZED_NAME_AVAILABILITY = "availability";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY)
  private CandidatePropertyAvailability availability;

  public static final String SERIALIZED_NAME_ACTIONS = "actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  private Map<String, Action> actions = null;


  public CandidatePropertyDefinition id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public CandidatePropertyDefinition label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLabel() {
    return label;
  }



  public void setLabel(String label) {
    this.label = label;
  }


  public CandidatePropertyDefinition type(CandidatePropertyType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CandidatePropertyType getType() {
    return type;
  }



  public void setType(CandidatePropertyType type) {
    this.type = type;
  }


  public CandidatePropertyDefinition availability(CandidatePropertyAvailability availability) {
    
    this.availability = availability;
    return this;
  }

   /**
   * Get availability
   * @return availability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CandidatePropertyAvailability getAvailability() {
    return availability;
  }



  public void setAvailability(CandidatePropertyAvailability availability) {
    this.availability = availability;
  }


  public CandidatePropertyDefinition actions(Map<String, Action> actions) {
    
    this.actions = actions;
    return this;
  }

  public CandidatePropertyDefinition putActionsItem(String key, Action actionsItem) {
    if (this.actions == null) {
      this.actions = new HashMap<String, Action>();
    }
    this.actions.put(key, actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Action> getActions() {
    return actions;
  }



  public void setActions(Map<String, Action> actions) {
    this.actions = actions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CandidatePropertyDefinition candidatePropertyDefinition = (CandidatePropertyDefinition) o;
    return Objects.equals(this.id, candidatePropertyDefinition.id) &&
        Objects.equals(this.label, candidatePropertyDefinition.label) &&
        Objects.equals(this.type, candidatePropertyDefinition.type) &&
        Objects.equals(this.availability, candidatePropertyDefinition.availability) &&
        Objects.equals(this.actions, candidatePropertyDefinition.actions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, label, type, availability, actions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CandidatePropertyDefinition {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

